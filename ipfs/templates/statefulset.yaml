apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "ipfs.fullname" . }}
  labels:
    app: {{ template "ipfs.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ template "ipfs.servicename" . }}
  selector:
    matchLabels:
      app: {{ template "ipfs.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "ipfs.name" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
    spec:
      securityContext:
        # The image runs as uid 1000 by default, and needs to be able to write to
        # the persistent volume to be able to start.
        fsGroup: 1000
        runAsUser: 1000
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image }}
          ports:
            - containerPort: 4001
              name: swarm
            - containerPort: 5001
              name: api
            - containerPort: 8080
              name: gateway
          volumeMounts:
            - name: data
              mountPath: /data/ipfs
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
      {{- with .Values.persistence.storageClass }}
        storageClassName: {{ . }}
      {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.volumeSize | default "1Gi" }}